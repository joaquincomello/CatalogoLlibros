// <auto-generated />
using System;
using CatalogoLlibros.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogoLlibros.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    [Migration("20250908225750_AddNullableUrlImagen")]
    partial class AddNullableUrlImagen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatalogoLlibros.Models.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "George Orwell"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Ray Bradbury"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Aldous Huxley"
                        });
                });

            modelBuilder.Entity("CatalogoLlibros.Models.Libro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("UrlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("anioPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("autorId")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("autorId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            id = 1,
                            UrlImagen = "https://m.media-amazon.com/images/I/61kjuGfZyML.jpg",
                            anioPublicacion = new DateTime(1949, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            autorId = 1,
                            titulo = "1984"
                        },
                        new
                        {
                            id = 2,
                            UrlImagen = "https://upload.wikimedia.org/wikipedia/en/d/db/Fahrenheit_451_1st_ed_cover.jpg",
                            anioPublicacion = new DateTime(1953, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            autorId = 2,
                            titulo = "Fahrenheit 451"
                        },
                        new
                        {
                            id = 3,
                            UrlImagen = "https://images.cdn1.buscalibre.com/fit-in/360x360/68/e0/68e0aac2ed0bfe4c39e0cf16663a5918.jpg",
                            anioPublicacion = new DateTime(1945, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            autorId = 1,
                            titulo = "Rebelión en la granja"
                        });
                });

            modelBuilder.Entity("CatalogoLlibros.Models.Libro", b =>
                {
                    b.HasOne("CatalogoLlibros.Models.Autor", "autor")
                        .WithMany()
                        .HasForeignKey("autorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");
                });
#pragma warning restore 612, 618
        }
    }
}
